from __future__ import division
import numpy
import Image
import os
import datetime

def text2scad(lines, module_name="desc"):
	scad = []
	ws = scad.append

	ws("use <font_DesignerBlock_lo.scad>")
	ws("")
	ws("module %s(fontsize, linesize, hight) {" % (module_name))
	y = 0
	for line in lines:
		ws("  translate([0, linesize*%d, 0]) label(\"%s\", size=fontsize, height=hight);" % (y, line.strip()));
		y -= 1

	ws("};")

	return '\n'.join(scad)

def make_scad(data, outputfile, scale_x, scale_y, scale_z, textlines=None):
	datafile = outputfile + ".dat"
	fd = open(datafile, "w")
	for y in range(data.shape[1]):
		for x in range(data.shape[0]):
			fd.write("%f " % (data[x, y]))
		fd.write("\n")
	fd.close()
	print "Saved data %s" % (datafile)

	fd = open(outputfile, "w")
	fd.write("//\n")
	fd.write("// Generated by generate_model.py\n")
	fd.write("// " + str(datetime.datetime.now()) + "\n")
	fd.write("//\n")
	fd.write("// Model description:\n")
	if textlines is not None:
		for line in textlines:
			fd.write("// " + line.strip() + "\n")
		fd.write("//\n")

		fd.write(text2scad(textlines) + "\n\n")

	fd.write("difference() { \n")
	fd.write("   scale([%f, %f, %f])\n" % (scale_x, scale_y, scale_z))
	fd.write("      surface(file = \"%s\", center = true, convexity = 5);\n" % (os.path.basename(datafile)))
	if textlines is not None:
		fd.write("  translate([0, 0, 1 - 0.5]) rotate([0, 180, 90]) desc(3, 10, 1);\n")

	fd.write("};\n")
	fd.close()
	print "Saved SCAD %s" % (outputfile)

def make_jpg(data, outfile):
	ppix = numpy.array(data)
	im = Image.fromarray(ppix)

	#imrgb = Image.merge('RGB', (im,im,im))
	imrgb = im.convert("RGB")

	imrgb.save(outfile)
	print "Saved JPG %s (Size=%dx%d)" % (outfile, data.shape[0], data.shape[1])
